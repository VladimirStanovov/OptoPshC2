Iteration 0 
Bool stack: 
Int stack:  0  20  2 
Float stack:  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  vector.yank  bool.not  1608.387101  exec.s  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  float.exp  vector.swap  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 1 
Bool stack: 
Int stack:  20  2 
Float stack:  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  bool.not  1608.387101  exec.s  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  float.exp  vector.swap  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 2 
Bool stack: 
Int stack:  20  2 
Float stack:  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  1608.387101  exec.s  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  float.exp  vector.swap  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 3 
Bool stack: 
Int stack:  20  2 
Float stack:  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  exec.s  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  float.exp  vector.swap  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 4 
Bool stack: 
Int stack:  20  2 
Float stack:  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  name.yankdup  exec.s  (  0.487436  exec.s  )  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  float.exp  vector.swap  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 5 
Bool stack: 
Int stack:  20  2 
Float stack:  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  exec.s  (  0.487436  exec.s  )  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  float.exp  vector.swap  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 6 
Bool stack: 
Int stack:  20  2 
Float stack:  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  (  0.487436  exec.s  )  int.rand  (  int.-  int.rand  )  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  float.exp  vector.swap  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 7 
Bool stack: 
Int stack:  20  2 
Float stack:  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  0.487436  exec.s  int.rand  (  int.-  int.rand  )  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  float.exp  vector.swap  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 8 
Bool stack: 
Int stack:  20  2 
Float stack:  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  exec.s  int.rand  (  int.-  int.rand  )  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  float.exp  vector.swap  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 9 
Bool stack: 
Int stack:  20  2 
Float stack:  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  int.rand  exec.define  (  (  int.-  int.rand  )  exec.define  )  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  float.exp  vector.swap  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 10 
Bool stack: 
Int stack:  49  20  2 
Float stack:  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  exec.define  (  (  int.-  int.rand  )  exec.define  )  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  float.exp  vector.swap  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 11 
Bool stack: 
Int stack:  49  20  2 
Float stack:  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  (  (  int.-  int.rand  )  exec.define  )  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  float.exp  vector.swap  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 12 
Bool stack: 
Int stack:  49  20  2 
Float stack:  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  (  int.-  int.rand  )  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  float.exp  vector.swap  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 13 
Bool stack: 
Int stack:  49  20  2 
Float stack:  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  float.exp  vector.swap  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 14 
Bool stack: 
Int stack:  -29  2 
Float stack:  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  float.exp  vector.swap  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 15 
Bool stack: 
Int stack:  58  -29  2 
Float stack:  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  float.exp  vector.swap  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 16 
Bool stack: 
Int stack:  58  -29  2 
Float stack:  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  float.exp  vector.swap  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 17 
Bool stack: 
Int stack:  2  58  -29 
Float stack:  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  float.exp  vector.swap  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 18 
Bool stack: 
Int stack:  58  1  -29 
Float stack:  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  float.exp  vector.swap  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 19 
Bool stack: 
Int stack:  58  1  -29 
Float stack:  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  vector.yankdup  int.dup  exec.yankdup  float.dup  float.exp  vector.swap  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 20 
Bool stack: 
Int stack:  1  -29 
Float stack:  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  int.dup  exec.yankdup  float.dup  float.exp  vector.swap  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <-4.986659,18.121697> <0.045834,-4.867730> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 21 
Bool stack: 
Int stack:  1  1  -29 
Float stack:  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  exec.yankdup  float.dup  float.exp  vector.swap  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <-4.986659,18.121697> <0.045834,-4.867730> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 22 
Bool stack: 
Int stack:  1  -29 
Float stack:  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  float.dup  float.dup  float.exp  vector.swap  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <-4.986659,18.121697> <0.045834,-4.867730> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 23 
Bool stack: 
Int stack:  1  -29 
Float stack:  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  float.dup  float.exp  vector.swap  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <-4.986659,18.121697> <0.045834,-4.867730> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 24 
Bool stack: 
Int stack:  1  -29 
Float stack:  0.487436  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  float.exp  vector.swap  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <-4.986659,18.121697> <0.045834,-4.867730> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 25 
Bool stack: 
Int stack:  1  -29 
Float stack:  1.628136  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  vector.swap  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <-4.986659,18.121697> <0.045834,-4.867730> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 26 
Bool stack: 
Int stack:  1  -29 
Float stack:  1.628136  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-4.986659,18.121697> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 27 
Bool stack: 
Int stack:  2  1  -29 
Float stack:  1.628136  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-4.986659,18.121697> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 28 
Bool stack: 
Int stack:  2  1  -29 
Float stack:  0.660344  1.628136  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-4.986659,18.121697> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 29 
Bool stack: 
Int stack:  2  1  -29 
Float stack:  0.789781  1.628136  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-4.986659,18.121697> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 30 
Bool stack: 
Int stack:  2  -29 
Float stack:  0.789781  1.628136  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-4.986659,18.121697> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 31 
Bool stack:  false 
Int stack:  2  -29 
Float stack:  0.789781  1.628136  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-4.986659,18.121697> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 32 
Bool stack:  false 
Int stack:  2  -29 
Float stack:  0.789781  1.628136  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-4.986659,18.121697> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 33 
Bool stack:  false 
Int stack:  2  -29 
Float stack:  0.710199  1.628136  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-4.986659,18.121697> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 34 
Bool stack:  false 
Int stack:  2  -29 
Float stack:  0.710199  1.628136  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-4.986659,18.121697> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 35 
Bool stack:  false 
Int stack:  2  -29 
Float stack:  0.651985  1.628136  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-4.986659,18.121697> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 36 
Bool stack:  false 
Int stack:  2  -29 
Float stack:  -0.427734  1.628136  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-4.986659,18.121697> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 37 
Bool stack:  false 
Int stack:  2  -29 
Float stack:  -0.427734  1.628136  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <0.045834,-4.867730> <-4.986659,18.121697> <-55.739487,-50.923652> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 38 
Bool stack:  false 
Int stack:  -29 
Float stack:  -0.427734  1.628136  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <-55.739487,-50.923652> <0.045834,-4.867730> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 39 
Bool stack: 
Int stack:  -29 
Float stack:  -0.427734  1.628136  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <-55.739487,-50.923652> <0.045834,-4.867730> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 40 
Bool stack: 
Int stack:  -29 
Float stack:  -0.427734  1.628136  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <-55.739487,-50.923652> <0.045834,-4.867730> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 41 
Bool stack: 
Int stack:  -29 
Float stack:  -0.427734  1.628136  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <-55.739487,-50.923652> <0.045834,-4.867730> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 42 
Bool stack: 
Int stack:  29 
Float stack:  -0.427734  1.628136  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <-55.739487,-50.923652> <0.045834,-4.867730> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 43 
Bool stack: 
Int stack:  29 
Float stack:  -0.427734  1.628136  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <-55.739487,-50.923652> <0.045834,-4.867730> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 44 
Bool stack: 
Int stack:  29 
Float stack:  -3.806424  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <-55.739487,-50.923652> <0.045834,-4.867730> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 45 
Bool stack: 
Int stack:  29 
Float stack:  -3.806424  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  vector.yankdup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <-55.739487,-50.923652> <0.045834,-4.867730> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 46 
Bool stack: 
Int stack: 
Float stack:  -3.806424  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <-4.986659,18.121697> <-55.739487,-50.923652> <0.045834,-4.867730> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 47 
Bool stack: 
Int stack: 
Float stack:  -3.806424  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <-4.986659,18.121697> <-55.739487,-50.923652> <0.045834,-4.867730> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 48 
Bool stack: 
Int stack:  24 
Float stack:  -3.806424  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <-4.986659,18.121697> <-55.739487,-50.923652> <0.045834,-4.867730> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 49 
Bool stack: 
Int stack:  24 
Float stack:  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <188.200109,280.937545> <0.045834,-4.867730> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 50 
Bool stack:  true 
Int stack: 
Float stack:  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <188.200109,280.937545> <0.045834,-4.867730> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 51 
Bool stack:  true 
Int stack: 
Float stack:  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <188.200109,280.937545> <0.045834,-4.867730> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 52 
Bool stack:  true 
Int stack: 
Float stack:  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <188.200109,280.937545> <0.045834,-4.867730> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 53 
Bool stack:  true 
Int stack: 
Float stack:  0.332433  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <188.200109,280.937545> <0.045834,-4.867730> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 54 
Bool stack:  true 
Int stack: 
Float stack:  0.543043  0.332433  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <188.200109,280.937545> <0.045834,-4.867730> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 55 
Bool stack:  true  true 
Int stack: 
Float stack:  0.487436  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <188.200109,280.937545> <0.045834,-4.867730> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 56 
Bool stack:  true  true 
Int stack: 
Float stack:  0.883537  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <188.200109,280.937545> <0.045834,-4.867730> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 57 
Bool stack:  true  true 
Int stack: 
Float stack:  0.883537  0.883537  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <188.200109,280.937545> <0.045834,-4.867730> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 58 
Bool stack:  true  true 
Int stack: 
Float stack:  0.883537  0.883537  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <188.200109,280.937545> <0.045834,-4.867730> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 59 
Bool stack:  true  true 
Int stack: 
Float stack:  0.883537  0.883537  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <188.200109,280.937545> <0.045834,-4.867730> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 60 
Bool stack:  true  true 
Int stack: 
Float stack:  0.883537  0.487436  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <21.958913,28.418112> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 61 
Bool stack:  true  true 
Int stack: 
Float stack:  0.172312  1608.387101  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <21.958913,28.418112> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 62 
Bool stack:  true  true 
Int stack: 
Float stack:  -0.238176  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <21.958913,28.418112> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 63 
Bool stack:  true  true 
Int stack:  15 
Float stack:  -0.238176  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <21.958913,28.418112> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 64 
Bool stack:  true  true 
Int stack:  15 
Float stack:  0.971770  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <21.958913,28.418112> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 65 
Bool stack:  true  true 
Int stack:  15 
Float stack:  0.971770  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <21.958913,28.418112> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 66 
Bool stack:  true  true 
Int stack:  2  15 
Float stack:  0.971770  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <21.958913,28.418112> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 67 
Bool stack:  true  true 
Int stack:  15 
Float stack:  0.971770  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  name.pop  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <21.958913,28.418112> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 68 
Bool stack:  true  true 
Int stack:  15 
Float stack:  0.971770  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <21.958913,28.418112> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 69 
Bool stack:  true  true 
Int stack:  15 
Float stack:  0.971770  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <21.958913,28.418112> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 70 
Bool stack:  true  true 
Int stack: 
Float stack:  0.971770  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack:  exec.flush  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  input.inallrev  float.setrandmin  int.+  name.yank  vector.sum  bool.swap  bool.swap  vector.max  float.log  exec.flush  exec.flush  name.dup  float.exp  vector.dim+  float.max  float.swap  vector.between  vector.between  vector.between  vector.fromint  name.=  vector.fromint  bool.or  bool.or  float.rand01  name.yankdup  0.487436  exec.s  int.-  int.rand  exec.define  int.rot  int.swap  vector.evalfunc  vector.yankdup  int.dup  exec.yankdup  float.dup  exec.dup  int.rand  0.660344  float.cos  int.max  false  bool.xor  float.sin  name.shove  float.sin  float.ln  bool.or  vector.yank  bool.pop  int.min  int.*  int.abs  int.<  float./  exec.dup  vector.yankdup  float.stackdepth  vector.between  bool.fromint  vector.dim+  bool.yankdup  float.rand01  float.rand  float.<  float.cos  float.dup  name.=  vector.fromint  vector.between  float.log  float.log  int.rand  float.cos  int.abs  bool.stackdepth  exec.do*times  name.pop  exec.yankdup  bool.yankdup  input.stackdepth  input.index  vector.min  int.=  bool.or  bool.stackdepth  float.sin  name.yankdup  bool.xor  vector.between  vector.evalfunc  float.cos 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <21.958913,28.418112> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

Iteration 71 
Bool stack:  true  true 
Int stack: 
Float stack:  0.971770  7.422276e+08  1.428953e+09  1.454136e+08  3.343345e+07  2.948956e+09  1.978539e+09  3.060143e+09  3.429512e+08  2.664071e+09  1.603189e+09  1.518602e+09  2.270960e+08  5.893728e+08  4.896043e+05  2.094453e+09  7.664953e+08  2.266584e+09  4.001149e+07  1.180867e+08  2.466346e+07 
Exec stack: 
Input stack: <100.000000,100.000000> <-100.000000,-100.000000> 
Name stack: 
Vector stack: <21.958913,28.418112> <-4.986659,18.121697> <16.443961,22.787748> <-74.052604,-24.577456> <-38.421916,-59.739407> <-86.921588,26.373642> <-85.621177,-89.454145> <-63.669908,10.091955> <-90.368161,-87.995453> <-62.540876,35.921529> <-7.118216,68.171058> <52.878634,41.292524> <73.901821,43.241463> <78.119471,74.973300> <-32.379423,-46.109176> <-93.550472,2.741703> <20.759746,95.117041> <13.990864,28.004278> <-18.285101,3.188671> <-4.986659,18.121697> 

